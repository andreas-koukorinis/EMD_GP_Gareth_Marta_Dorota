A20_div_A0 = sum(A20_div_A0_nondiag)
det_De[i]
scenariusze = expand.grid(Helena_wybor,Diego_wybor,Gus_wybor)
Helena_wybor = c('Nikt','Diego','Gus')
Diego_wybor = c('nie Helena','Helena')
Gus_wybor = c('nie Helena','Helena')
scenariusze = expand.grid(Helena_wybor,Diego_wybor,Gus_wybor)
View(scenariusze)
colnames(scenariusze) = c('Helena_wybor','Diego_wybor','Gus_wybor')
View(scenariusze)
scenariusze = rbind(scenariusze,c('Diego & Gus','Helena','Helena'))
scenariusze
scenariusze[13,] = c('Diego and Gus','Helena','Helena')
scenariusze
as.matrix(scenariusze)
scenariusze = as.matrix(scenariusze)
View(scenariusze)
scenariusze[13,] = c('Diego a Gus','Helena','Helena')
View(scenariusze)
rm(list=ls(all=TRUE))
dir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dir)
library(mvtnorm)
library(reshape2)
library(MASS)
library(ggplot2)
### SQUARE EXPONENTIAL
K_SE <- function(x1,x2,l = 1) {exp(- abs(x1-x2)^2 / (l^2) ) }
### RATIONAL QUADRATIC (scale mixture of SE with different l)
K_RQ <- function(x1,x2,l= 1,alpha = 1) { ( 1 + abs(x1-x2)^2/(2 * alpha * l^2)  )^{-alpha} }
### OLS LINEAR REGRESSION
K_OLS <- function(x1,x2,sigma2 = 1){x1 * x2 + sigma2}
### PERIODIC WITH SE KERNEL
K_PR <- function(x1,x2,l = 1){exp(-2 * sin(pi*abs(x1 - x2))^2/(l^2))}
############ plotting
n = 20
t <- seq(0,10,len=n)
t_grid = expand.grid(t,t)
l_list = c(1,2,3,10,20,50)
nl = length(l_list)
function_Sigma_SE = function(l) matrix( apply(expand.grid(t,t),1, function(s) K_SE(x1=s[1],x2=s[2],l = l)),nrow = n)
Sigma_SE = lapply(l_list, function(l) function_Sigma_SE (l) )
Sigme_SE_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_SE[[i]]); df$parm = i;df$label ='SE';return(df) } ))
function_Sigma_RQ = function(l,a) matrix( apply(expand.grid(t,t),1, function(s) K_RQ(x1=s[1],x2=s[2],l = l, alpha = a)),nrow = n)
l_alpha_list = expand.grid(l_list[c(1,4,6)],c(0.1,2))
nla = nrow(l_alpha_list)
Sigma_RQ = lapply(1:nla, function(i) function_Sigma_RQ(l_alpha_list[i,1],l_alpha_list[i,2] ) )
Sigme_RQ_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_RQ[[i]]); df$parm = i;df$label ='RQ';return(df) } ))
function_Sigma_PR = function(l) matrix( apply(expand.grid(t,t),1, function(s) K_PR(x1=s[1],x2=s[2],l = l)),nrow = n)
Sigma_PR = lapply(l_list/5, function(l) function_Sigma_PR (l) )
Sigme_PR_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_PR[[i]]); df$parm = i;df$label ='PR';return(df) } ))
toplot_Sigma_st = do.call('rbind',list(Sigme_SE_melted,Sigme_RQ_melted,Sigme_PR_melted))
gg = ggplot(toplot_Sigma_st, aes(x = Var1, y = Var2,fill = value))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_tile()
gg = gg + scale_fill_gradientn(colors = c('lightyellow','blue','red'))
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'bottom')
gg = gg + labs(x = NULL, y = NULL)
ggsave(paste(dir,'/kernel_stationary.png',sep = ''),width =10,height = 8)
toplot_y_st_list = list()
for(s in 1:3){
y_sim_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t=t, y = mvrnorm(1, rep(0, n), Sigma_RQ[[i]] )); df$parm = i;df$label ='RQ';return(df) } ))
y_sim_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = t,y = mvrnorm(1, rep(0, n), Sigma_SE[[i]] )); df$parm = i;df$label ='SE';return(df) } ))
y_sim_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = t,y = mvrnorm(1, rep(0, n), Sigma_PR[[i]] )); df$parm = i;df$label ='PR';return(df) } ))
toplot_y_st_list[[s]] =  do.call('rbind',list(y_sim_SE,y_sim_RQ,y_sim_PR))
toplot_y_st_list[[s]]$s = s
}
toplot_y_st = do.call('rbind',toplot_y_st_list)
gg = ggplot(toplot_y_st, aes(x = t, y = y,color = factor(s)))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
ggsave(paste(dir,'/y_sim_stationary.png',sep = ''),width =10,height = 8)
id_obs = sample(1:n,4,replace= F)
t_obs = t[id_obs]
t_pred = t[-id_obs]
y_obs = subset(toplot_y_st, toplot_y_st$s == 1 & toplot_y_st$label=='RQ' & toplot_y_st$parm == 1 & toplot_y_st$t %in% t_obs)[,'y']
y_ob
y_obs
id_obs
i = 1
K_SE[[i]]
Sigma_RQ[[i]]
Sigma_RQ[[i]][-id_obs,id_obs]
Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs] %*% matrix(y_obs,ncol = 1)
c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)
)
nobs = length(id_obs)
npred = n - nobs
npred
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pref),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_SE
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='RQ');return(df) } ))
mu_pred_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_PR[[i]][-id_obs,id_obs] %*% solve(Sigma_PR[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='PR');return(df) } ))
toplot_y_pred_st_list[[s]] =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st_list =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st_list
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y,color = factor(isObs) ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y,color = factor(isObs) ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg+ geom_line()
gg = gg + geom_point(aes(size = factor(isObs)))
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg+ geom_line()
gg
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'free_y' )
gg = gg + geom_line()
gg
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_SE[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='RQ');return(df) } ))
mu_pred_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_PR[[i]][-id_obs,id_obs] %*% solve(Sigma_PR[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='PR');return(df) } ))
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'free_y' )
gg = gg + geom_line()
gg
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + geom_point(aes(size = factor(isObs), color = factor(isObs)))
gg = gg + theme_minimal()
gg
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + geom_point(y = y_obs, x = t_obs, color ='red')
gg = gg + theme_minimal()
gg
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + geom_point(aes(y = y_obs, x = t_obs, color ='red'))
gg = gg + theme_minimal()
gg
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + geom_point(data.frame(y_obs = y_obs, t_obs = t_obs),aes(y = y_obs, x = t_obs),color ='red')
gg = ggplot(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line()
gg
gg = ggplot()
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(toplot_y_pred_st, aes(x = t, y = y ))
gg = gg + geom_line(toplot_y_pred_st, x = t, y = y )
gg = ggplot()
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(toplot_y_pred_st, aes(x = t, y = y ) )
?gg
gg = ggplot()
gg
gg = ggplot(toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg
gg = gg + geom_point(data.frame(y_obs = y_obs, t_obs = t_obs),aes(y = y_obs, x = t_obs),color ='red')
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red')
gg
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_SE[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_SE[[i]][-id_obs,-id_obs] - Sigma_SE[[i]][-id_obs,id_obs] %*% solve( Sigma_SE[[i]][id_obs,id_obs]) %*% Sigma_SE[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_SE
diag(Sigma_SE[[i]] - Sigma_SE[[i]][,id_obs] %*% solve( Sigma_SE[[i]][id_obs,id_obs]) %*% Sigma_SE[[i]][id_obs,])
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_SE[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_SE[[i]][-id_obs,-id_obs] - Sigma_SE[[i]][-id_obs,id_obs] %*% solve( Sigma_SE[[i]][id_obs,id_obs]) %*% Sigma_SE[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_RQ[[i]][-id_obs,-id_obs] - Sigma_RQ[[i]][-id_obs,id_obs] %*% solve( Sigma_RQ[[i]][id_obs,id_obs]) %*% Sigma_RQ[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='RQ');return(df) } ))
mu_pred_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_PR[[i]][-id_obs,id_obs] %*% solve(Sigma_PR[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_PR[[i]][-id_obs,-id_obs] - Sigma_PR[[i]][-id_obs,id_obs] %*% solve( Sigma_PR[[i]][id_obs,id_obs]) %*% Sigma_PR[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_SE[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_SE[[i]][-id_obs,-id_obs] - Sigma_SE[[i]][-id_obs,id_obs] %*% solve( Sigma_SE[[i]][id_obs,id_obs]) %*% Sigma_SE[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_RQ[[i]][-id_obs,-id_obs] - Sigma_RQ[[i]][-id_obs,id_obs] %*% solve( Sigma_RQ[[i]][id_obs,id_obs]) %*% Sigma_RQ[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='RQ');return(df) } ))
mu_pred_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_PR[[i]][-id_obs,id_obs] %*% solve(Sigma_PR[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_PR[[i]][-id_obs,-id_obs] - Sigma_PR[[i]][-id_obs,id_obs] %*% solve( Sigma_PR[[i]][id_obs,id_obs]) %*% Sigma_PR[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='PR');return(df) } ))
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st$conf_up = toplot_y_pred_st$y + 1.96 * toplot_y_pred_st$conf_spread
toplot_y_pred_st$conf_down = toplot_y_pred_st$y - 1.96 * toplot_y_pred_st$conf_spread
gg = ggplot(toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red')
gg = gg + geom_ribbon(aes(ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg
gg = ggplot(toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red')
gg = gg + geom_ribbon(aes(ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg = gg + theme_minimal()
gg
gg = ggplot(data = toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_ribbon(aes(ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg
gg = ggplot(data = toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_ribbon(aes(x = t, ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red')
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
gg
gg = ggplot(data = toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_ribbon(aes(x = t, ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red', size = 10)
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
#gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
gg
gg = ggplot(data = toplot_y_pred_st)
gg = gg + facet_grid(parm~łabel, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_ribbon(aes(x = t, ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red', size = 3)
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
#gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
gg
ggsave(paste(dir,'/y_pred_stationary.png',sep = ''),width =10,height = 8)
rm(list=ls(all=TRUE))
dir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dir)
library(mvtnorm)
library(reshape2)
library(MASS)
library(ggplot2)
### SQUARE EXPONENTIAL
K_SE <- function(x1,x2,l = 1) {exp(- abs(x1-x2)^2 / (l^2) ) }
### RATIONAL QUADRATIC (scale mixture of SE with different l)
K_RQ <- function(x1,x2,l= 1,alpha = 1) { ( 1 + abs(x1-x2)^2/(2 * alpha * l^2)  )^{-alpha} }
### OLS LINEAR REGRESSION
K_OLS <- function(x1,x2,sigma2 = 1){x1 * x2 + sigma2}
### PERIODIC WITH SE KERNEL
K_PR <- function(x1,x2,l = 1){exp(-2 * sin(pi*abs(x1 - x2))^2/(l^2))}
############ plotting
n = 20
t <- seq(0,10,len=n)
t_grid = expand.grid(t,t)
l_list = c(1,2,3,10,20,50)
nl = length(l_list)
function_Sigma_SE = function(l) matrix( apply(expand.grid(t,t),1, function(s) K_SE(x1=s[1],x2=s[2],l = l)),nrow = n)
Sigma_SE = lapply(l_list, function(l) function_Sigma_SE (l) )
Sigme_SE_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_SE[[i]]); df$parm = i;df$label ='SE';return(df) } ))
function_Sigma_RQ = function(l,a) matrix( apply(expand.grid(t,t),1, function(s) K_RQ(x1=s[1],x2=s[2],l = l, alpha = a)),nrow = n)
l_alpha_list = expand.grid(l_list[c(1,4,6)],c(0.1,2))
nla = nrow(l_alpha_list)
Sigma_RQ = lapply(1:nla, function(i) function_Sigma_RQ(l_alpha_list[i,1],l_alpha_list[i,2] ) )
Sigme_RQ_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_RQ[[i]]); df$parm = i;df$label ='RQ';return(df) } ))
function_Sigma_PR = function(l) matrix( apply(expand.grid(t,t),1, function(s) K_PR(x1=s[1],x2=s[2],l = l)),nrow = n)
Sigma_PR = lapply(l_list/5, function(l) function_Sigma_PR (l) )
Sigme_PR_melted = do.call('rbind',lapply(1:nl, function(i){df = melt(Sigma_PR[[i]]); df$parm = i;df$label ='PR';return(df) } ))
toplot_Sigma_st = do.call('rbind',list(Sigme_SE_melted,Sigme_RQ_melted,Sigme_PR_melted))
gg = ggplot(toplot_Sigma_st, aes(x = Var1, y = Var2,fill = value))
gg = gg + facet_grid(parm~label, scales = 'fixed' )
gg = gg + geom_tile()
gg = gg + scale_fill_gradientn(colors = c('lightyellow','blue','red'))
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'bottom')
gg = gg + labs(x = NULL, y = NULL)
ggsave(paste(dir,'/kernel_stationary.png',sep = ''),width =10,height = 8)
toplot_y_st_list = list()
for(s in 1:3){
y_sim_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t=t, y = mvrnorm(1, rep(0, n), Sigma_RQ[[i]] )); df$parm = i;df$label ='RQ';return(df) } ))
y_sim_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = t,y = mvrnorm(1, rep(0, n), Sigma_SE[[i]] )); df$parm = i;df$label ='SE';return(df) } ))
y_sim_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = t,y = mvrnorm(1, rep(0, n), Sigma_PR[[i]] )); df$parm = i;df$label ='PR';return(df) } ))
toplot_y_st_list[[s]] =  do.call('rbind',list(y_sim_SE,y_sim_RQ,y_sim_PR))
toplot_y_st_list[[s]]$s = s
}
toplot_y_st = do.call('rbind',toplot_y_st_list)
gg = ggplot(toplot_y_st, aes(x = t, y = y,color = factor(s)))
gg = gg + facet_grid(parm~label, scales = 'fixed' )
gg = gg + geom_line()
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
ggsave(paste(dir,'/y_sim_stationary.png',sep = ''),width =10,height = 8)
id_obs = sample(1:n,4,replace= F)
nobs = length(id_obs)
npred = n - nobs
t_obs = t[id_obs]
t_pred = t[-id_obs]
y_obs = subset(toplot_y_st, toplot_y_st$s == 1 & toplot_y_st$label=='RQ' & toplot_y_st$parm == 1 & toplot_y_st$t %in% t_obs)[,'y']
mu_pred_SE = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_SE[[i]][-id_obs,id_obs] %*% solve(Sigma_SE[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_SE[[i]][-id_obs,-id_obs] - Sigma_SE[[i]][-id_obs,id_obs] %*% solve( Sigma_SE[[i]][id_obs,id_obs]) %*% Sigma_SE[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='SE');return(df) } ))
mu_pred_RQ = do.call('rbind',lapply(1:nla, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_RQ[[i]][-id_obs,id_obs] %*% solve(Sigma_RQ[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_RQ[[i]][-id_obs,-id_obs] - Sigma_RQ[[i]][-id_obs,id_obs] %*% solve( Sigma_RQ[[i]][id_obs,id_obs]) %*% Sigma_RQ[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='RQ');return(df) } ))
mu_pred_PR = do.call('rbind',lapply(1:nl, function(i){df = data.frame(t = c(t_obs,t_pred),
y = c(y_obs,Sigma_PR[[i]][-id_obs,id_obs] %*% solve(Sigma_PR[[i]][id_obs,id_obs]) %*% matrix(y_obs,ncol = 1)),
conf_spread = c(rep(0,nobs), diag(Sigma_PR[[i]][-id_obs,-id_obs] - Sigma_PR[[i]][-id_obs,id_obs] %*% solve( Sigma_PR[[i]][id_obs,id_obs]) %*% Sigma_PR[[i]][id_obs,-id_obs]) ),
isObs = c(rep(1,nobs),rep(0,npred) ),
parm =  i,
label ='PR');return(df) } ))
toplot_y_pred_st =  do.call('rbind',list(mu_pred_SE,mu_pred_RQ,mu_pred_PR))
toplot_y_pred_st$conf_up = toplot_y_pred_st$y + 1.96 * toplot_y_pred_st$conf_spread
toplot_y_pred_st$conf_down = toplot_y_pred_st$y - 1.96 * toplot_y_pred_st$conf_spread
gg = ggplot(data = toplot_y_pred_st)
gg = gg + facet_grid(parm~label, scales = 'fixed' )
gg = gg + geom_line(aes(x = t, y = y ) )
gg = gg + geom_ribbon(aes(x = t, ymin = conf_down,ymax = conf_up),alpha = 0.5)
gg = gg + geom_point(data = data.frame(y_obs = y_obs, t_obs = t_obs), aes(y = y_obs, x = t_obs) ,color ='red', size = 3)
gg = gg + theme_minimal()
gg = gg + theme(panel.border = element_rect(color = 'grey20', fill= NA), panel.grid	= element_blank())
#gg = gg + theme(axis.text.x = element_blank(), axis.text.y = element_blank())
gg = gg + theme(legend.position = 'none')
gg = gg + labs(x = NULL, y = NULL)
ggsave(paste(dir,'/y_pred_stationary.png',sep = ''),width =10,height = 8)
